
# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
config-version: 2
name: 'my_dbt_project_v1'
version: '1.0.0'

# Adding this new feature
flags:
  use_materialization_v2: true

# This setting configures which "profile" dbt uses for this project.
profile: 'my_dbt_project_v1'

# These configurations specify where dbt should look for different types of files.
# The `model-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
analysis-paths: ["analysis"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]
log-path: "logs"

target-path: "target"
clean-targets:         # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"


# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/
# directory as views. These settings can be overridden in the individual model
# files using the `{{ config(...) }}` macro.
models:
  my_dbt_project_v1:
    # Config indicated by + and applies to all files under models/example/
    views:
      materialized: view
      tags: "view"
    tables:
      materialized: table
      tags: "table"
      file_format: "delta"
      gold_tables:
        enabled: true
        +schema: gold_adworks_rich
        +tags: ["gold"]
      silver_tables:
        enabled: true
        +schema: silver_adworks_rich
        +tags: ["silver"]
    steps:
      materialized: ephemeral
      tags: "ephemeral"
      file_format: "delta"
    incremental:
      materialized: incremental
      tags: "incremental"
      file_format: "delta"
      +schema: silver_adworks_rich
      +tags: ["silver"]
    disabled:
      enabled: false
